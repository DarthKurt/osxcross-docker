name: Docker Image CI

permissions:
  contents: read
  packages: write
  attestations: write
  id-token: write

on:
  push:
    branches: ["main"]
    paths:
      - ".github/workflows/docker-image.yml"
      - "Dockerfile"

env:
  VERSION: "0.1.0-${{ github.sha }}"
  BUILD_DATE: ${{ github.event.head_commit.timestamp }}
  IMAGE_REPO: "https://github.com/${{ github.repository }}"

jobs:
  build_and_test:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture:
          - amd64
          - arm64
    steps:
      - name: Lowercase repository owner
        id: lowercase_owner
        run: echo "owner=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker Container
        id: push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/${{ matrix.architecture }}
          build-args: |
            BUILD_DATE=${{ env.BUILD_DATE }}
            VERSION=${{ env.VERSION }}
            VCS_URL=${{ env.IMAGE_REPO }}
            VCS_REF=${{ github.sha }}
            IMAGE_URL=${{ env.IMAGE_REPO }}
          push: true
          tags: |
            ghcr.io/${{ steps.lowercase_owner.outputs.owner }}/osxcross-builder:${{ env.VERSION }}
            ghcr.io/${{ steps.lowercase_owner.outputs.owner }}/osxcross-builder:latest

      - name: Generate Artifact Attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ghcr.io/${{ steps.lowercase_owner.outputs.owner }}/osxcross-builder
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.push.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-linux-${{ matrix.architecture }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge_platform_containers:
    name: Merge Platform Containers
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      - name: Lowercase repository owner
        id: lowercase_owner
        run: echo "owner=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Download Digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ steps.lowercase_owner.outputs.owner }}/osxcross-builder
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create \
            $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf 'ghcr.io/${{ steps.lowercase_owner.outputs.owner }}/osxcross-builder@sha256:%s ' *)

      - name: Inspect Image
        run: |
          docker buildx imagetools inspect ghcr.io/${{ steps.lowercase_owner.outputs.owner }}/osxcross-builder:${{ env.VERSION }}
